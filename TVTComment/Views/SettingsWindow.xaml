<Window x:Class="TVTComment.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TVTComment.Views"
        xmlns:converters="clr-namespace:TVTComment.Views.Converters"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="SettingWindow" Height="580" Width="400" WindowStyle="ToolWindow">

    <Window.Resources>
        <converters:ColorToStringConverter x:Key="StringToColorConverter"/>
        <converters:ColorToSolidColorBrushConverter x:Key="ColorConverter"/>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="FrameworkElement">
            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        </Style>
    </Window.Style>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding AlertRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <TabControl>
        <TabItem Header="一般">
            <StackPanel Orientation="Vertical">
                <GroupBox Header="コメント元自動選択">
                    <StackPanel Orientation="Vertical">
                        <GroupBox Header="放送中番組視聴時">
                            <ItemsControl ItemsSource="{Binding DefaultChatCollectServices.LiveServices}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding ServiceEntry.Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                        <GroupBox Header="録画番組視聴時">
                            <ItemsControl ItemsSource="{Binding DefaultChatCollectServices.RecordServices}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding ServiceEntry.Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Grid.Row="0">コメントログ数 (0で無限):</Label>
                    <TextBox Text="{Binding ChatPreserveCount.Value}" Grid.Column="1" Grid.Row="0" InputMethod.IsInputMethodSuspended="True" VerticalAlignment="Center"/>
                </Grid>
            </StackPanel>
        </TabItem>
        <!--<TabItem Header="コメント元プリセット">
            <settingswindowcontents:ChatCollectServiceCreationPresetSettingControl DataContext="{Binding ChatCollectServiceCreationPresetSettingControlViewModel}"/>
        </TabItem>-->
        <TabItem Header="ニコニコ実況">
            <Grid local:Grid.Shape="*:auto,auto,auto,auto,*,*">
                <TextBlock Text="設定後は現在使用中のコメント元をいったん無効にして再度有効にする必要があります" TextWrapping="Wrap" Grid.Row="0"/>


                <GroupBox Header="アカウント" Grid.Row="1">
                    <Grid local:Grid.Shape="auto,*:*,*,*,auto">

                        <Label Content="メールアドレス" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                        <TextBox Text="{Binding NiconicoUserId.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                        <Label Content="パスワード" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                        <TextBox Text="{Binding NiconicoPassword.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                        <Label Content="ワンタイムパスワード" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="2"/>
                        <TextBox Text="{Binding NiconicoOneTimePassword.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3">

                            <TextBlock Text="{Binding NiconicoLoginStatus.Value}" VerticalAlignment="Center"/>
                            <Button Content="ログイン" Command="{Binding LoginNiconicoCommand}" HorizontalAlignment="Right"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                <GroupBox Header="コメント投稿" Grid.Row="2">
                    <Grid local:Grid.Shape="*:*">
                        <CheckBox IsChecked="{Binding Always184.Value}" Content="常に184コメントとして投稿をする"  Grid.Row="1"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="勢い設定" Grid.Row="3">
                    <Grid local:Grid.Shape="*:*,auto,auto">
                        <TextBlock  Grid.Row="0">
                        「勢い」欄が空欄の場合、既定のAPIに異常がある可能性があります<LineBreak/>
                         この設定で参照する勢いAPIを変更出来ます
                        </TextBlock>
                        <CheckBox IsChecked="{Binding EnableThirdForce.Value}" Content="旧ニコニコ実況互換の勢いAPIを利用する" Grid.Row="1"/>
                        <Grid local:Grid.Shape="auto,*:*" Grid.Row="2" IsEnabled="{Binding EnableThirdForce.Value}">
                            <Label Content="URI (必須)" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                            <TextBox Text="{Binding ThirdForceApiUri.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                        </Grid>
                        <Button Content="適用" Command="{Binding ThirdForceApplyCommand}" HorizontalAlignment="Right" Grid.Row="3" />
                    </Grid>
                </GroupBox>
                <GroupBox Header="新実況生放送ID設定" Grid.Row="4">
                    <TextBlock>
                        設定はniconicoliveids.txtから行ってください<LineBreak/>
                        設定変更はプラグイン再起動後に適用されます
                    </TextBlock>
                </GroupBox>
                <GroupBox Header="非公式実況過去ログ実況ID設定" Grid.Row="5">
                    <TextBlock>
                        設定はniconicojikkyouids.txtから行ってください<LineBreak/>
                        設定変更はプラグイン再起動後に適用されます
                    </TextBlock>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="Twitter実況">
            <Grid local:Grid.Shape="*:auto,auto,*">
                <TextBlock Text="設定後は現在使用中のコメント元をいったん無効にして再度有効にする必要があります" TextWrapping="Wrap" Grid.Row="0"/>
                <GroupBox Header="TwitterAPI設定" Grid.Row="1">
                    <StackPanel>
                        <Grid local:Grid.Shape="auto,*:auto,auto">
                            <Label Content="API key" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                            <TextBox Text="{Binding TwitterApiKey.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                            <Label Content="API secret" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                            <TextBox Text="{Binding TwitterApiSecret.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <Button Content="適用" Command="{Binding ApplyTwitterApisCommand}" HorizontalAlignment="Right"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="アカウントにログイン" Grid.Row="2">
                    <Grid local:Grid.Shape="*:auto,auto,auto,auto,*,auto">
                        <TextBlock Text="Twitterアカウントにログインするには以下の2つの方法のいずれかを利用する必要があります" TextWrapping="Wrap"  Grid.Row="0"/>
                        <GroupBox Header="Access tokenでログイン" Grid.Row="1">
                            <StackPanel>
                                <TextBlock Text="PINを利用してログインした場合、ログイン後にAccessToken及びSecretはPINログインにて取得した値に上書きされますので注意してください" TextWrapping="Wrap" Foreground="Red"/>
                                <Grid local:Grid.Shape="auto,*:auto,auto,auto,auto,auto">
                                    <Label Content="Access token" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                                    <TextBox Text="{Binding TwitterApiAccessKey.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                                    <Label Content="Access secret" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="2"/>
                                    <TextBox Text="{Binding TwitterApiAccessSecret.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2"/>
                                    <Label Content="Bearer token" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="3"/>
                                    <TextBox Text="{Binding TwitterBearerToken.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3"/>
                                </Grid>
                                <Button Content="ログイン" Command="{Binding LoginTokensTwitterCommand}"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" Margin="5,5,5,0"/>

                            </StackPanel>
                        </GroupBox>
                        <TextBlock Text="or"  TextWrapping="Wrap" HorizontalAlignment="Center" Grid.Row="2"/>
                        <GroupBox Header="OAuthのPINでログイン" Grid.Row="3">
                            <StackPanel>
                                <Button Content="Twitter OAuth画面を開く" Command="{Binding OpenTwitter}" Margin="0,5,0,0"/>
                                <Grid local:Grid.Shape="auto,*:auto,auto,auto,auto,auto" Margin="0,10,0,0">
                                    <TextBlock Text="PINコード：" Grid.Column="0" Grid.Row="0" />
                                    <TextBox Text="{Binding TwitterPinCode.Value}" Grid.Column="1" Grid.Row="0" />
                                </Grid>
                                <Button Content="PINでログイン" Command="{Binding EnterTwitter}" Margin="0,10,0,0"/>
                            </StackPanel>
                        </GroupBox>
                        <TextBlock Text="{Binding TwitterStatus.Value}" HorizontalAlignment="Right" Grid.Row="4" Height="57"/>
                        <Button Content="ログアウト" Command="{Binding LogoutTwitterCommand}" Grid.Row="5" HorizontalAlignment="Stretch" Margin="5,5,5,0" VerticalAlignment="Top"/>

                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="Annict">
            <Grid local:Grid.Shape="*:auto,auto,auto,auto">
                <TextBlock Text="設定後は現在使用中のコメント元をいったん無効にして再度有効にする必要があります" TextWrapping="Wrap" Grid.Row="0"/>
                <TextBlock Text="AnnictはTwitter実況においてハッシュタグをアニメ毎に自動取得するのに利用します。アニメ毎に自動取得する機能を使わない場合認証は必要ありません。" TextWrapping="Wrap" Grid.Row="1"/>
                <GroupBox Header="AnnictAPI設定" Grid.Row="2">
                    <Grid local:Grid.Shape="*:auto,auto,auto,*">
                        <TextBlock Text="Annictアカウントにログインするには以下の2つの方法のいずれかを利用する必要があります" TextWrapping="Wrap"  Grid.Row="0"/>
                        <GroupBox Header="個人用アクセストークン認証" Grid.Row="1">
                            <Grid local:Grid.Shape="*:auto,auto,*">
                                <Grid local:Grid.Shape="auto,*:auto">
                                    <Label Content="アクセストークン" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                                    <TextBox Text="{Binding AnnictAccessToken.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                                </Grid>
                                <Button Content="適用" Command="{Binding AnnictAccessTokenApplyCommand}" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="2"/>
                            </Grid>
                        </GroupBox>
                        <TextBlock Text="or"  TextWrapping="Wrap" HorizontalAlignment="Center" Grid.Row="2"/>
                        <GroupBox Header="OAuth認証" Grid.Row="3">
                            <Grid local:Grid.Shape="*:auto,auto,*">
                                <Button Content="Annict OAuth認証画面を開く" Command="{Binding AnnictOAuthOpenCommand}" HorizontalAlignment="Stretch" Grid.Row="0"/>
                                <Grid local:Grid.Shape="auto,*:auto" Grid.Row="1">
                                    <Label Content="認証コード" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                                    <TextBox Text="{Binding AnnictPin.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                                </Grid>
                                <Button Content="認証" Command="{Binding AnnictOAuthCertificationCommand}" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="2"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </GroupBox>
                <GroupBox Header="コメント元自動選択" Grid.Row="3">
                    <Grid local:Grid.Shape="*:auto,auto">
                        <TextBlock Text="「Twitterリアルタイム実況」がコメント元自動選択で有効になったときの動作を指定できます。下記設定が無効の場合「Twitterリアルタイム実況」では「プリセット」モードで有効になります。" TextWrapping="Wrap" Grid.Row="0"/>
                        <CheckBox IsChecked="{Binding AnnictAutoEnable.Value}" Content="「自動(アニメ用・Annictからハッシュタグ取得)」を利用する"  Grid.Row="1"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="2ch">
            <Grid local:Grid.Shape="*:auto,auto,auto,auto,*,auto">
                <TextBlock TextWrapping="Wrap" Grid.Row="0">現在使用中のコメント元には変更は適用されません</TextBlock>
                <GroupBox Header="「2chDAT」コメント元設定" Grid.Row="1">
                    <Grid local:Grid.Shape="auto,*:auto,auto">
                        <Label Content="レスの更新間隔(秒)" ToolTip="この間隔ごとにレスがダウンロードされ、コメントが追加されます" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                        <TextBox Text="{Binding NichanResCollectInterval.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                        <Label Content="スレッドリストの更新間隔(秒)" ToolTip="この間隔ごとに板内のスレッドのリストがダウンロードされ、レス収集対象のスレッドが変更されます" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                        <TextBox Text="{Binding NichanThreadSearchInterval.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="「2ch過去ログ」コメント元設定" Grid.Row="3">
                    <StackPanel>
                        <Grid local:Grid.Shape="auto,*:auto,auto">
                            <Label Content="さかのぼる時間(分)" ToolTip="放送時刻からこの時間だけ前の時刻以降に作成されたスレッドからレスを収集します" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                            <TextBox Text="{Binding NichanPastCollectServiceBackTime.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                            <Label Content="UserAgent" ToolTip="過去ログ取得に利用するUserAgent" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                            <TextBox Text="{Binding NichanPastUserAgent.Value}" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="板設定" Grid.Row="4">
                    <TextBlock>設定は2chthreads.txtから行ってください<LineBreak/>設定変更はプラグイン再起動後に適用されます</TextBlock>
                </GroupBox>
                <Button Content="適用" Command="{Binding ApplyNichanSettingsCommand}" HorizontalAlignment="Right" Grid.Row="5"/>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
